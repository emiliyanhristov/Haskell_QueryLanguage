-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from RQLGrammar.y
-----------------------------------------------------------------------------

state 13 contains 1 shift/reduce conflicts.
state 14 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseCalc -> Exp                            (0)
	Exp -> prefix str colon URIExp dot                 (1)
	Exp -> base URIExp dot                             (2)
	Exp -> URIExp URIExp ObjectExp dot                 (3)
	Exp -> URIExp URIExp ObjectExpList dot             (4)
	Exp -> URIExp PredObjExpList dot                   (5)
	ObjectExpList -> ObjectExp                         (6)
	ObjectExpList -> ObjectExp comma ObjectExpList     (7)
	PredObjExpList -> URIExp ObjectExpList             (8)
	PredObjExpList -> URIExp ObjectExpList semiColon PredObjExpList   (9)
	ObjectExp -> lURIBracket str rURIBracket           (10)
	ObjectExp -> int                                   (11)
	ObjectExp -> plus int                              (12)
	ObjectExp -> minus int                             (13)
	ObjectExp -> true                                  (14)
	ObjectExp -> false                                 (15)
	ObjectExp -> paren str paren                       (16)
	URIExp -> lURIBracket str rURIBracket              (17)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	int            { TokenInt $$ }
	str            { TokenString $$ }
	true           { TokenTrue }
	false          { TokenFalse }
	comma          { TokenComma }
	colon          { TokenColon }
	base           { TokenBase $$ }
	prefix         { TokenPrefix $$ }
	lURIBracket    { TokenLURIBracket }
	rURIBracket    { TokenRURIBracket }
	dot            { TokenDot }
	semiColon      { TokenSemiColon }
	paren          { TokenParen }
	minus          { TokenMinus }
	plus           { TokenPlus }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseCalc rule  0
	Exp             rules 1, 2, 3, 4, 5
	ObjectExpList   rules 6, 7
	PredObjExpList  rules 8, 9
	ObjectExp       rules 10, 11, 12, 13, 14, 15, 16
	URIExp          rule  17

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	base           shift, and enter state 5
	prefix         shift, and enter state 2
	lURIBracket    shift, and enter state 6

	Exp            goto state 3
	URIExp         goto state 4

State 1


	prefix         shift, and enter state 2


State 2

	Exp -> prefix . str colon URIExp dot                (rule 1)

	str            shift, and enter state 11


State 3

	%start_parseCalc -> Exp .                           (rule 0)

	%eof           accept


State 4

	Exp -> URIExp . URIExp ObjectExp dot                (rule 3)
	Exp -> URIExp . URIExp ObjectExpList dot            (rule 4)
	Exp -> URIExp . PredObjExpList dot                  (rule 5)

	lURIBracket    shift, and enter state 6

	PredObjExpList goto state 9
	URIExp         goto state 10

State 5

	Exp -> base . URIExp dot                            (rule 2)

	lURIBracket    shift, and enter state 6

	URIExp         goto state 8

State 6

	URIExp -> lURIBracket . str rURIBracket             (rule 17)

	str            shift, and enter state 7


State 7

	URIExp -> lURIBracket str . rURIBracket             (rule 17)

	rURIBracket    shift, and enter state 24


State 8

	Exp -> base URIExp . dot                            (rule 2)

	dot            shift, and enter state 23


State 9

	Exp -> URIExp PredObjExpList . dot                  (rule 5)

	dot            shift, and enter state 22


State 10

	Exp -> URIExp URIExp . ObjectExp dot                (rule 3)
	Exp -> URIExp URIExp . ObjectExpList dot            (rule 4)
	PredObjExpList -> URIExp . ObjectExpList            (rule 8)
	PredObjExpList -> URIExp . ObjectExpList semiColon PredObjExpList    (rule 9)

	int            shift, and enter state 15
	true           shift, and enter state 16
	false          shift, and enter state 17
	lURIBracket    shift, and enter state 18
	paren          shift, and enter state 19
	minus          shift, and enter state 20
	plus           shift, and enter state 21

	ObjectExpList  goto state 13
	ObjectExp      goto state 14

State 11

	Exp -> prefix str . colon URIExp dot                (rule 1)

	colon          shift, and enter state 12


State 12

	Exp -> prefix str colon . URIExp dot                (rule 1)

	lURIBracket    shift, and enter state 6

	URIExp         goto state 33

State 13

	Exp -> URIExp URIExp ObjectExpList . dot            (rule 4)
	PredObjExpList -> URIExp ObjectExpList .            (rule 8)
	PredObjExpList -> URIExp ObjectExpList . semiColon PredObjExpList    (rule 9)

	dot            shift, and enter state 31
			(reduce using rule 8)

	semiColon      shift, and enter state 32


State 14

	Exp -> URIExp URIExp ObjectExp . dot                (rule 3)
	ObjectExpList -> ObjectExp .                        (rule 6)
	ObjectExpList -> ObjectExp . comma ObjectExpList    (rule 7)

	comma          shift, and enter state 29
	dot            shift, and enter state 30
			(reduce using rule 6)

	semiColon      reduce using rule 6


State 15

	ObjectExp -> int .                                  (rule 11)

	comma          reduce using rule 11
	dot            reduce using rule 11
	semiColon      reduce using rule 11


State 16

	ObjectExp -> true .                                 (rule 14)

	comma          reduce using rule 14
	dot            reduce using rule 14
	semiColon      reduce using rule 14


State 17

	ObjectExp -> false .                                (rule 15)

	comma          reduce using rule 15
	dot            reduce using rule 15
	semiColon      reduce using rule 15


State 18

	ObjectExp -> lURIBracket . str rURIBracket          (rule 10)

	str            shift, and enter state 28


State 19

	ObjectExp -> paren . str paren                      (rule 16)

	str            shift, and enter state 27


State 20

	ObjectExp -> minus . int                            (rule 13)

	int            shift, and enter state 26


State 21

	ObjectExp -> plus . int                             (rule 12)

	int            shift, and enter state 25


State 22

	Exp -> URIExp PredObjExpList dot .                  (rule 5)

	%eof           reduce using rule 5


State 23

	Exp -> base URIExp dot .                            (rule 2)

	%eof           reduce using rule 2


State 24

	URIExp -> lURIBracket str rURIBracket .             (rule 17)

	int            reduce using rule 17
	true           reduce using rule 17
	false          reduce using rule 17
	lURIBracket    reduce using rule 17
	dot            reduce using rule 17
	paren          reduce using rule 17
	minus          reduce using rule 17
	plus           reduce using rule 17


State 25

	ObjectExp -> plus int .                             (rule 12)

	comma          reduce using rule 12
	dot            reduce using rule 12
	semiColon      reduce using rule 12


State 26

	ObjectExp -> minus int .                            (rule 13)

	comma          reduce using rule 13
	dot            reduce using rule 13
	semiColon      reduce using rule 13


State 27

	ObjectExp -> paren str . paren                      (rule 16)

	paren          shift, and enter state 40


State 28

	ObjectExp -> lURIBracket str . rURIBracket          (rule 10)

	rURIBracket    shift, and enter state 39


State 29

	ObjectExpList -> ObjectExp comma . ObjectExpList    (rule 7)

	int            shift, and enter state 15
	true           shift, and enter state 16
	false          shift, and enter state 17
	lURIBracket    shift, and enter state 18
	paren          shift, and enter state 19
	minus          shift, and enter state 20
	plus           shift, and enter state 21

	ObjectExpList  goto state 37
	ObjectExp      goto state 38

State 30

	Exp -> URIExp URIExp ObjectExp dot .                (rule 3)

	%eof           reduce using rule 3


State 31

	Exp -> URIExp URIExp ObjectExpList dot .            (rule 4)

	%eof           reduce using rule 4


State 32

	PredObjExpList -> URIExp ObjectExpList semiColon . PredObjExpList    (rule 9)

	lURIBracket    shift, and enter state 6

	PredObjExpList goto state 35
	URIExp         goto state 36

State 33

	Exp -> prefix str colon URIExp . dot                (rule 1)

	dot            shift, and enter state 34


State 34

	Exp -> prefix str colon URIExp dot .                (rule 1)

	%eof           reduce using rule 1


State 35

	PredObjExpList -> URIExp ObjectExpList semiColon PredObjExpList .    (rule 9)

	dot            reduce using rule 9


State 36

	PredObjExpList -> URIExp . ObjectExpList            (rule 8)
	PredObjExpList -> URIExp . ObjectExpList semiColon PredObjExpList    (rule 9)

	int            shift, and enter state 15
	true           shift, and enter state 16
	false          shift, and enter state 17
	lURIBracket    shift, and enter state 18
	paren          shift, and enter state 19
	minus          shift, and enter state 20
	plus           shift, and enter state 21

	ObjectExpList  goto state 41
	ObjectExp      goto state 38

State 37

	ObjectExpList -> ObjectExp comma ObjectExpList .    (rule 7)

	dot            reduce using rule 7
	semiColon      reduce using rule 7


State 38

	ObjectExpList -> ObjectExp .                        (rule 6)
	ObjectExpList -> ObjectExp . comma ObjectExpList    (rule 7)

	comma          shift, and enter state 29
	dot            reduce using rule 6
	semiColon      reduce using rule 6


State 39

	ObjectExp -> lURIBracket str rURIBracket .          (rule 10)

	comma          reduce using rule 10
	dot            reduce using rule 10
	semiColon      reduce using rule 10


State 40

	ObjectExp -> paren str paren .                      (rule 16)

	comma          reduce using rule 16
	dot            reduce using rule 16
	semiColon      reduce using rule 16


State 41

	PredObjExpList -> URIExp ObjectExpList .            (rule 8)
	PredObjExpList -> URIExp ObjectExpList . semiColon PredObjExpList    (rule 9)

	dot            reduce using rule 8
	semiColon      shift, and enter state 32


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 18
Number of terminals: 15
Number of non-terminals: 6
Number of states: 42
